/*******************************************************************************
 *                                                                             *
 *  Имя этого файла: d_tree.h                                                  *
 *                                                                             *
  ******************************************************************************
 */  
    
//******************************************************************************

#ifndef MYTREE_H
#define MYTREE_H 

#include <limits.h>	/* for INT_MAX */

//******************************************************************************
#ifdef __cplusplus	/* let C++ coders use this library */
extern "C" {
#endif
//******************************************************************************


#define NO  101

/******************************************************************************/
#define MM_NEXT_MAX 50

typedef int TR_NVAL;

typedef struct {
  char   *name;
  TR_NVAL nval;
  char   *next_name[MM_NEXT_MAX];
  //---------------------------

  void   *pstr, *prev;
  void   *next_pstr[MM_NEXT_MAX];
} TR_NODE;


typedef struct {
  char    *name;     // имя для самого дерева (нужно для идентификации?)

  TR_NODE *root;     // корень (начало) дерева
  TR_NODE *curn;     // текущий узел
} TR_TREE;

/*----------------------------------------------------------------------------*/
typedef struct {
  TR_NODE *node;
} TR_MOVE;


TR_TREE  *tr_create (TR_NODE/* _TXT */ nodes[]);
TR_TREE  *tr_create_new (char *nodestring[]);
void      tr_rotate (TR_NODE *cur);

void      tree_tests (); 

//******************************************************************************
#ifdef __cplusplus
}
#endif
//******************************************************************************

#endif /* MYTREE_H */
/*----------------------------------------------------------------------------*/
